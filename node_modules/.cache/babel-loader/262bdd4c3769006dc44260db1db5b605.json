{"ast":null,"code":"import _toConsumableArray from \"/home/dci/Documents/reactapp/project-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/dci/Documents/reactapp/project-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n// IMPORT THIS ITEMS FROM JSON FILE\nimport { products, card } from '../api/products.json';\nimport { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY, ADD_SHIPPING } from '../actions/action-types/card-actions';\nvar initState = {\n  products: products,\n  card: card\n};\n\nvar cartReducer = function cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  // console.log('cardReducer',state.products,card)\n  //INSIDE HOME COMPONENT\n  if (action.type === ADD_TO_CART) {\n    var _addedItem = state.products.find(function (item) {\n      return item.id === action.id;\n    }); //check if the action id exists in the addedItems\n\n\n    var existed_item = state.card.addedItems.find(function (item) {\n      return action.id === item.id;\n    });\n\n    if (existed_item) {\n      _addedItem.quantity += 1;\n      return _objectSpread({}, state, {\n        card: {\n          addedItems: [].concat(_toConsumableArray(state.card.addedItems), [_addedItem]),\n          total: state.card.total + _addedItem.price\n        }\n      });\n    } else {\n      _addedItem.quantity = 1; //calculating the total\n\n      var _newTotal = state.card.total + _addedItem.price;\n\n      return _objectSpread({}, state, {\n        products: products,\n        card: {\n          addedItems: [].concat(_toConsumableArray(state.card.addedItems), [_addedItem]),\n          total: _newTotal\n        }\n      });\n    }\n  }\n\n  if (action.type === REMOVE_ITEM) {\n    var itemToRemove = state.products.find(function (item) {\n      return action.id === item.id;\n    });\n    var new_items = state.card.addedItems.filter(function (item) {\n      return action.id !== item.id;\n    }); //calculating the total\n\n    var _newTotal2 = state.card.total - itemToRemove.price * itemToRemove.quantity;\n\n    itemToRemove.quantity = 0;\n    console.log(itemToRemove);\n    return _objectSpread({}, state, {\n      products: products,\n      card: {\n        addedItems: new_items,\n        total: _newTotal2\n      }\n    });\n  } //INSIDE CART COMPONENT\n\n\n  if (action.type === ADD_QUANTITY) {\n    var _addedItem2 = state.items.find(function (item) {\n      return item.id === action.id;\n    });\n\n    _addedItem2.quantity += 1;\n\n    var _newTotal3 = state.total + _addedItem2.price;\n\n    return _objectSpread({}, state, {\n      total: _newTotal3\n    });\n  }\n\n  if (action.type === SUB_QUANTITY) {\n    var _addedItem3 = state.products.find(function (item) {\n      return item.id === action.id;\n    });\n\n    console.log(_addedItem3.quantity);\n\n    if (_addedItem3.quantity > 1) {\n      _addedItem3.quantity -= 1;\n\n      var _newTotal4 = state.card.total - _addedItem3.price;\n\n      return _objectSpread({}, state, {\n        products: products,\n        card: {\n          addedItems: state.card.addedItems,\n          total: _newTotal4\n        }\n      });\n    }\n  } else {\n    addedItem.quantity = 0;\n    newTotal = state.card.total - addedItem.price;\n    return _objectSpread({}, state, {\n      products: products,\n      card: {\n        addedItems: state.card.addedItems,\n        total: newTotal\n      }\n    });\n  }\n\n  return state;\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/dci/Documents/reactapp/project-shop/src/reducers/cardReducer.js"],"names":["products","card","ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","ADD_QUANTITY","ADD_SHIPPING","initState","cartReducer","state","action","type","addedItem","find","item","id","existed_item","addedItems","quantity","total","price","newTotal","itemToRemove","new_items","filter","console","log","items"],"mappings":"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","sourcesContent":["// IMPORT THIS ITEMS FROM JSON FILE\nimport { products, card } from '../api/products.json'\nimport { ADD_TO_CART,REMOVE_ITEM,SUB_QUANTITY,ADD_QUANTITY,ADD_SHIPPING } from '../actions/action-types/card-actions'\n\n\nconst initState = {\n  products,\n  card\n}\nconst cartReducer= (state = initState,action)=>{\n    // console.log('cardReducer',state.products,card)\n\n    //INSIDE HOME COMPONENT\n    if(action.type === ADD_TO_CART){\n        \n          let addedItem = state.products.find(item=> item.id === action.id)\n\n\n          //check if the action id exists in the addedItems\n          let existed_item= state.card.addedItems.find(item=> action.id === item.id)         \n\n         if(existed_item)\n         {\n            addedItem.quantity += 1 \n             return{\n                ...state,\n                card: {\n                    addedItems: [...state.card.addedItems, addedItem],\n                    total : state.card.total + addedItem.price \n\n                } \n                  }\n        }\n         else{\n            addedItem.quantity = 1;\n            //calculating the total\n            let newTotal = state.card.total + addedItem.price \n            \n            return{\n                ...state,\n                products,\n                card:{\n                    addedItems: [...state.card.addedItems, addedItem],\n                    total : newTotal\n                }\n            }\n            \n        }\n    }\n    if(action.type === REMOVE_ITEM){\n        let itemToRemove= state.products.find(item=> action.id === item.id)\n        let new_items = state.card.addedItems.filter(item=> action.id !== item.id)\n        \n        //calculating the total\n        let newTotal = state.card.total - (itemToRemove.price * itemToRemove.quantity )\n        itemToRemove.quantity=0\n        console.log(itemToRemove)\n        return{\n            ...state,\n            products,\n            card:{\n                addedItems: new_items,\n                total: newTotal\n            }\n        }\n    }\n    //INSIDE CART COMPONENT\n    if(action.type=== ADD_QUANTITY){\n        let addedItem = state.items.find(item=> item.id === action.id)\n          addedItem.quantity += 1 \n          let newTotal = state.total + addedItem.price\n          return{\n              ...state,\n              total: newTotal\n          }\n    }\n     if(action.type=== SUB_QUANTITY){  \n                \n                let addedItem = state.products.find(item=> item.id === action.id)\n               console.log(addedItem.quantity)\n                \n                if(addedItem.quantity > 1){\n                    addedItem.quantity -= 1\n                    let newTotal = state.card.total - addedItem.price\n                    return{\n                        ...state, \n                        products, \n                        card: {  \n                            addedItems: state.card.addedItems,                     \n                            total : newTotal  \n    \n                        }                       \n                        \n                       \n                    } \n                }                \n                \n            }\n\n            else {\n                addedItem.quantity=0\n                newTotal=state.card.total - addedItem.price\n                return{\n                 ...state, \n                 products, \n                 card: {  \n                     addedItems: state.card.addedItems,                     \n                     total : newTotal  \n \n                 }  \n         }           \n         \n     }\n    return state\n}\n\nexport default cartReducer"]},"metadata":{},"sourceType":"module"}